data Link {
    value: int
    next: *Link
}

function main() -> int {
    var list: *Link = nil
    list = appendList(list, 1)
    list = appendList(list, 2)
    list = appendList(list, 3)

    # Outputs 6 (1 + 2 + 3)
    print(sumOverList(list))

    return 0
}

function sumOverList(list: *Link) -> int {
    if list == nil {
        return 0
    }
    return list.value + sumOverList(list.next)
}

function appendList(list: *Link, to_append: int) -> *Link {
    if list == nil {
        return alloc(new Link { value = to_append, next = nil })
    }
    var iter: *Link = list
    while iter.next != nil {
        iter = iter.next
    }
    iter.next = alloc(new Link { value = to_append, next = nil })
    return list
}
